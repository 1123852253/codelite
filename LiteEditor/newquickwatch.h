//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: newquickwatch.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CODELITE_LITEEDITOR_NEWQUICKWATCH_BASE_CLASSES_H
#define _CODELITE_LITEEDITOR_NEWQUICKWATCH_BASE_CLASSES_H

#include "clThemedTreeCtrl.h"
#include <wx/artprov.h>
#include <wx/button.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/panel.h>
#include <wx/popupwin.h>
#include <wx/settings.h>
#include <wx/sizer.h>
#include <wx/statbmp.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/treectrl.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/xrc/xmlres.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

class clDebuggerTipWindowBase : public wxPopupWindow
{
protected:
    wxPanel* m_panel46;
    wxPanel* m_panel50;
    clThemedTreeCtrl* m_treeCtrl;
    wxPanel* m_panelStatusBar;
    wxStaticBitmap* m_staticBitmap44;

protected:
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnLeftDown(wxMouseEvent& event) { event.Skip(); }
    virtual void OnMouseMove(wxMouseEvent& event) { event.Skip(); }
    virtual void OnItemExpanded(wxTreeEvent& event) { event.Skip(); }
    virtual void OnExpandItem(wxTreeEvent& event) { event.Skip(); }
    virtual void OnItemMenu(wxTreeEvent& event) { event.Skip(); }
    virtual void OnStatusLeftUp(wxMouseEvent& event) { event.Skip(); }
    virtual void OnStatuMotion(wxMouseEvent& event) { event.Skip(); }
    virtual void OnTipLeftDown(wxMouseEvent& event) { event.Skip(); }

public:
    clThemedTreeCtrl* GetTreeCtrl() { return m_treeCtrl; }
    wxPanel* GetPanel50() { return m_panel50; }
    wxStaticBitmap* GetStaticBitmap44() { return m_staticBitmap44; }
    wxPanel* GetPanelStatusBar() { return m_panelStatusBar; }
    wxPanel* GetPanel46() { return m_panel46; }
    clDebuggerTipWindowBase(wxWindow* parent, long style = wxBORDER_NONE);
    virtual ~clDebuggerTipWindowBase();
};

class clDebuggerEditItemDlgBase : public wxDialog
{
protected:
    wxPanel* m_panel32;
    wxStaticText* m_staticText36;
    wxTextCtrl* m_textCtrl38;
    wxButton* m_button28;
    wxButton* m_button30;

protected:
public:
    wxStaticText* GetStaticText36() { return m_staticText36; }
    wxTextCtrl* GetTextCtrl38() { return m_textCtrl38; }
    wxPanel* GetPanel32() { return m_panel32; }
    wxButton* GetButton28() { return m_button28; }
    wxButton* GetButton30() { return m_button30; }
    clDebuggerEditItemDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Edit Item"),
                              const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(400, -1),
                              long style = wxDEFAULT_DIALOG_STYLE | wxSTAY_ON_TOP);
    virtual ~clDebuggerEditItemDlgBase();
};

#endif
